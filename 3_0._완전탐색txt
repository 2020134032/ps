nc1, nc2 부터 ncn 모두 확인해야 하는 경우:

집합의 부분집합의 개수 ( 하나의 원소가 포함되거나, 포함되지 않거나)
-> 재귀함수 두가지 나눠서 풀기

- 원복이 필요한 경우(뇌피셜)
-> 재귀함수 자체에 파라미터가 하나밖에 없을때(index)
-> vector가 전역변수고 이를 가지고 전역변수에서*  바로 작업할때(함수 parameter로 안넘김.)
-> 분기가 적은 경우 직접 함수 파라미터 자체에 넘기는 그 자리에서 바꿔줄수 있으면 좋지만,
-> for룹을 돌면서 재귀를 도는 경우 더 사용
-> for 은 언제 사용하는가? 경우에 따라 분기의 개수가 바뀔때.(node not binary?)

go(int there){
	visited[there] =1;
	go(there);
	visited[there]=0;
	(같은 맵을 여러번 탐색해야 하는 경우, 모든 경로의 길을 탐색하는 상황이라고)
	생각하면 갔던 곳을 다시 취소하는 경우라고 생각하면 좋은듯)

	(왜냐하면 맵 기반의 문제들은 visited배열을 통해 내가 이미 지나온 경로를 제외하고 다음)
	갈 곳을 탐색하는데, visited 배열이 없으면 왔던 곳을 다시 갈수도 있음.
	그에 반해 linear한 탐색 구조를 가진 (binary?) 완탐은 그냥 다음 가야할 노드가 정해져 있
	기 때문에( 그냥 다음 front) visit 배열을 사용할 필요가 없을 뿐더러, 원복하며 
	탐색할 필요 없이 쭉쭉 진행 가능
	}